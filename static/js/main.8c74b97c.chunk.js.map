{"version":3,"sources":["components/Form.js","components/Todo.js","components/To-do list.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","classNameName","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c74b97c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({setInputText, inputText, todos, setTodos, setStatus }) => {\r\n    //Here i can write javascript code and functions\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000},\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n    return(\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\"/>\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" classNameName=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if (item.id === todo.id) {\r\n                    return {\r\n                        ...item, \r\n                        completed: !item.completed,\r\n                    };\r\n                }\r\n                return item\r\n            })\r\n        );\r\n    };\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n            \r\n\r\nexport default Todo;","import React from \"react\";\r\n//Import Components\r\nimport Todo from \"./Todo\"\r\nconst TodoList = ({todos, setTodos, filteredTodos}) =>{\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo\r\n                        setTodos={setTodos}\r\n                        todos={todos} \r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        text={todo.text} \r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n//Importing Components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/To-do list\";\n\nfunction App() {\n  \n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //Run once when the app starts\n  useEffect(() =>{\n    getLocalTodos();\n  },[])\n  //Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  //Functions\n  const filterHandler = () =>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  //Save to local storage\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n  const getLocalTodos = () =>{\n    if(localStorage.getItem('todos') === 'null'){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To-Do list</h1>\n      </header>\n      <Form \n        inputText={inputText} \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText}\n        setStatus={setStatus}\n        \n      />\n      <TodoList \n      setTodos={setTodos}\n      todos={todos}\n      filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}